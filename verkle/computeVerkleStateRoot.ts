import { bufferToHex, rlp, toBuffer } from 'ethereumjs-util';
import wasm from '../../rust-verkle-wasm/pkg/rust_verkle_wasm'

const genesisBlock = "0xf901f6f901f1a00000000000000000000000000000000000000000000000000000000000000000a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a01c3604dd43a38735e9afc5f8fa99ceff3734bfc612963367f6788a45bf19c282a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bfefd8808080a0000000000000000000000000000000000000000000000000000000000000000088000000000000005607c0c0"
const block1 = "0xf908b5f908b0a0e7068a7284845d70c5631c6bbbbd2843f5648c2a46843cd5d8a5440287102bffa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794a8ea391eacd86ab326843579060e42007a5fa93ba012de1859fbd30a0b4ca9e583525334428fc1451fe938b16e8ee0cae67fc7935ba056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bcf808461af76c88d64616f2d686172642d666f726ba0105fceec00e4d18d5f40bc06884fd46c2af252e232b8c44b98934ec6dc47169f885b383f5860e019bd842da282a8b906a4f906a1f90538f904e9f9025ff84ae4881a8e352cbd5652718860842b474d3b484f888f9e35936e759622884b6836444a18805de4880f92e939453e8b0f883d8cfa1a04a06c368875782a821d5105e688706e08246201a36ef84ae488bf58073f9439102088115cb5ee677eee35881805d647aff944168843e056ee5c712720e4889408d40d621e705a88f98a2fd5e5ec18a48859b75032984c4e248845c2a6f5bd7e4551f849e488b08db29b804ed8b088ec435924120eb5ad8851f0e36d007d95e988573c8d7957ba7e7ae3887b4ae753de421b03885f38752bc4ad9818880b428d3e0619f997873be9994309f0adf84ae4885f0380625ad9619b8869fd3ae6720c36eb88ba3e0cbb6b2538588873330a32fe0da180e488d567cb44d6e193d688547784de78b11ad5888c407a50fe10534088605780c37111ba05f84ae48826bbd5028b415719882b53edef45eeca4d88dee4a8005c1371698834c0db016775192ce488b6aa3b991da78f6088dc08005370740dd488f6f7b7398d7d29c588534ebf8424ac853af84ae488b37fa24f143b10aa8897072a38b674b33b88ece6340a1f8f55bf881409fe54ffc631f3e4888cb447b715a9b6ea88ae8dd05e5fd6e6a18857f91d05bbf9c92b88134040f0af49f13df84ae4886a6944532a670d3a88ebfe277ad61178fe88f869ce43e97008bf881be25c7effa21373e4882a61cc1fee367fb588e7ab0c90787f240288231a55861be0f8ec8814e20d01344209e9f84ae488f52f428f2b9ef48788d00f14766427320e8876091a43c844b5a9886ee1a168400d0d55e4883e55e0c7230bebbe88a5fbb5c66f7dc00d8816ef2c5fbc09018f8837405f6835ee71c1f9025ff84ae488de94c0f7ee6b890888e2436b744314508388d90208c32d276bdc885b6038dff06b1363e4888dff40cdd08e937a88ace272c170915f038853ea49a06cbe99a38830fea8af1b6ba717f84ae4881c3173fd212a874e88af2737bebdef43be8818402e259597c88f887269830ca63e9face488616ca3f27febc6a08849a6cb07d42ec05d8864383766639ba13588368cd6cec012c9a3f849e488d55b23bd153d853188ac7332398c54ac0a8869a9e926b2b0bc728858657b87a27c08d3e388992356b55115adb888526d5428f243d04288180db96098b319268766be67e0f5cf9cf84ae488131aeb22a2805240882844d82da5d4e75f8877e7116ea491d1ad884ce44f59730b88a0e488bcb180eb14de460d88d8df092531acbfd088d90a7267b836674088380344dc4b611916f84ae4884d5d1c04cb43bcd488ec88dcccb08b2daa88fc2fae5e217de1078815f2b634f5b36471e48874cdbf6d075fb02188e32ca026802e91738836c02937cabfbded886964ebdab3f5c589f84ae4889ad9f62be235535e8879f60a0cf69b080e8893c45276bde0909c88487639c92416ff50e488fc63c41ecc44c9ca88510963a87e68b0ce889e1c06117e4e497f8865f7e2a06e3ed91af84ae48880084671915dd4e7889f2a1934ec2fadd888a76b39f8088ed876884a429fee92d9036ce4888d3a1cb30019cdcb88bbe78cc87d3b40328888b853ef039b5c06883e3bee577df23038f84ae4882b6e9861ed8569718814aac9c7f7b28a5f884a56384f14ed924f880f790a0910842506e48813b5a7b7b7a91e36886f192c6e7587b0da887bf227c672cd2a2e880fc72c7d02a449d9e488103c529502ad089188cd100d7c4ad230568874b2c8d68f632e918803e05b3d836d4421f84ae488dd27ee63f971165188d26d7089322b6121882dd326273f44b550881f29d48600b3d10ae488b3805de591c673e888fb7d02cab08df34288e487b807a0e879d8885b83925ec10c5634f8e4f84ae48899665c3248be3c7688b79f73fbcc63d3c2882cf3843d05d4218d88351c593628bef299e48846cc0a85304a8579883bebb41672a424e9881f0af2f528601b86886f267abe31f645b1f84ae488b813380e0f13fb3a880ab2a621b6b19809880a15f02c84940f8688651ead80c9f049e5e48802bd98c88b2c84578842cf23a6e5a165a68882de831c9537e4038808bc67b22156bb56f84ae488ed28d9ee9db145fa880b63396eac07322988f9713369f94db3bb885028a7e09e0705b3e488049a9bf973f15ecd885de1b8c52708fcd78882546898b2ddc061881093929325dd684480f84fe4883eef399ea05850e988b370e64f3f0b3f0c8898f25ab3eba84a0a8804d8f90483e7eb67c480808080e488ce5d92bf1b79600388d39b2b123b1674d588b56ce1c84704eb3b8806ebaf6dba737f55edeca038a1503908fd00988afebe7e34bccbe2a4d6636549a9c0ce150db72d6c4af9018a40003782dace9d900000c0c0"

const gb = toBuffer(genesisBlock)
const b1 = toBuffer(block1)

const rlpg = rlp.decode(gb) as any
const genesisStateRoot = rlpg[0][3]
const rlp1 = rlp.decode(b1) as any
const block1StateRoot = rlp1[0][3]
const verkl1 = rlp1[0][16]
const block1StateTransition = new Map();
const genesisAllocationAddress = Buffer.concat([
    Buffer.alloc(12).fill(0),
    toBuffer('0xa8ea391eacd86ab326843579060e42007a5fa93b'),
])
const genesisStateBalance = toBuffer('0x40000000000000000000')
const block1Balance = toBuffer('0x40001bc16d674ec80000')
block1StateTransition.set(genesisAllocationAddress, [
    Buffer.concat([Buffer.alloc(32 - genesisStateBalance.length).fill(0), genesisStateBalance]),
    Buffer.concat([Buffer.alloc(32 - block1Balance.length).fill(0), block1Balance])
])

let res = wasm.js_verify_update(genesisStateRoot, verkl1, block1StateTransition)
console.log('Computed Block 1 State Root', bufferToHex(res))
console.log('Geth provided Block 1 State Root', bufferToHex(block1StateRoot))

